name: "FROST: build for Windows with autotools and CMake. Run functional tests and example under Wine"

on:
  push:
    branches:
      - frost
  pull_request:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  example-and-tests-mingw-autotools-cmake:
    runs-on: ubuntu-24.04
    container:
      image: fedora:42
    steps:
      - name: Install build dependencies
        run: |
          dnf install -y \
              --setopt=install_weak_deps=False \
              autoconf \
              automake \
              cmake \
              gawk \
              libtool \
              mingw64-gcc \
              pkg-config \
              wine-core
      - name: set up wine 1
        # This is a (not pretty) solution to the error:
        #     "wine: '/github/home' is not owned by you, refusing to create a configuration directory there"
        #
        # Taken from:
        #     https://github.com/electron-userland/electron-builder/issues/2510#issuecomment-2625427588
        run: echo HOME=/root >> "$GITHUB_ENV"
      - name: set up wine 2
        run: wine64 winecfg /v win11
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: "Autotools: run autogen"
        run: ./autogen.sh
      - name: "Autotools: configure for building a windows binary via MinGW"
        run: |
          mingw64-configure \
              SECP_CFLAGS="" \
              --enable-experimental \
              --with-test-override-wide-multiply=auto \
              --with-asm=no \
              --with-ecmult-window=15 \
              --with-ecmult-gen-kb=86 \
              --disable-ctime-tests \
              --enable-examples \
              --enable-module-ecdh \
              --enable-module-ellswift \
              --enable-module-extrakeys \
              --enable-module-musig \
              --enable-module-recovery \
              --enable-module-schnorrsig \
              --enable-module-frost \
              --with-valgrind=no
      - name: "Autotools: build via MinGW"
        id: autotools_build
        # we do not need to invoke mingw64-make, because we have already
        # configured the project via mingw64-configure.
        # See: https://fedoraproject.org/wiki/MinGW/Tutorial
        run: make -j
      - name: "Autotools: run frost example via Wine"
        id: autotools_frost_example
        run: wine64 ./frost_example.exe
      - name: "Autotools: run functional tests manually via Wine"
        id: autotools_functional_tests
        run: wine64 ./tests.exe
      - name: "CMake: build via MinGW"
        id: cmake_build
        run: |
          mkdir build
          cd build
          mingw64-cmake \
              -DCMAKE_C_FLAGS="-Werror" \
              -DCMAKE_BUILD_TYPE="Release" \
              -DSECP256K1_BUILD_TESTS=ON \
              -DSECP256K1_BUILD_EXHAUSTIVE_TESTS=OFF \
              -DSECP256K1_BUILD_BENCHMARK=OFF \
              -DSECP256K1_ENABLE_MODULE_ECDH=ON \
              -DSECP256K1_ENABLE_MODULE_RECOVERY=ON \
              -DSECP256K1_ENABLE_MODULE_EXTRAKEYS=ON \
              -DSECP256K1_ENABLE_MODULE_SCHNORRSIG=ON \
              -DSECP256K1_ENABLE_MODULE_MUSIG=ON \
              -DSECP256K1_ENABLE_MODULE_ELLSWIFT=ON \
              -DSECP256K1_BUILD_EXAMPLES=ON \
              -DSECP256K1_EXPERIMENTAL=ON \
              -DSECP256K1_ENABLE_MODULE_FROST=ON \
              ..
          make -j
      - name: "CMake: run FROST example via Wine"
        id: cmake_frost_example
        run: |
          # frost_example.exe is dynamically linked. Let's copy it under src so
          # that wine's linker is able to find libsecp256k1-2.dll. There is
          # probably a more elegant way.
          #
          # "--update=none-fail" did not work on coreutils 9.5 (Fedora 41) due
          # to a bug. It required a workaround that is no longer necessary with
          # coreutils 9.6 (Fedora 42).
          cp --update=none-fail "${GITHUB_WORKSPACE}/build/examples/frost_example.exe" "${GITHUB_WORKSPACE}/build/src"
          wine "${GITHUB_WORKSPACE}/build/src/frost_example.exe"
      - name: "Cmake: run functional tests via Wine"
        id: cmake_functional_tests
        run: |
          wine "${GITHUB_WORKSPACE}/build/src/tests.exe"
